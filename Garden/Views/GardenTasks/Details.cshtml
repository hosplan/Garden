@model Garden.Models.GardenTask

<div class="col-xl-12 mb-3">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">
            <span class="text-info font-weight-bold mr-2">@Model.Name </span>
        </h1>
        <input type="hidden" id="GardenTaskId" value="@Model.Id"/>
        <div class="btn-group" role="group" aria-label="Basic example">
            <button class="btn btn-success" data-permission="update" onclick="openModal('GardenTasks','Edit', @Model.Id)">
                <i class="fas fa-brush fa-sm text-white-50"></i>
                @Html.Raw("수정")
            </button>
            <button class="btn btn-danger" data-permission="delete" onclick="removeGardenTask(@Model.Id)">
                <i class="fas fa-trash fa-sm text-white-50"></i>
                @Html.Raw("삭제")
            </button>
        </div>
    </div>
</div>

<div class="col-xl-12">
    <div class="card shadow mb-3">
        <div class="card-header">
            <span class="text-info font-weight-bold">
                <i class="fas fa-users fa-fw mr-2"></i>
                @Html.Raw("내용")
            </span>
        </div>
        <div class="card-body">
            @Model.Description
        </div>
    </div>
</div>

@await Html.PartialAsync("_DetailsForAttendUsers", Model) 
<script type="text/javascript">

    //다른 정원 정보 불러오기
    function GetOtherGarden() {
        let change_gardenSpace_option = document.getElementById('Garden_list');
        change_gardenSpace_option = change_gardenSpace_option.options[change_gardenSpace_option.selectedIndex].value;

        let url = '/GardenTasks/GetGardenTaskList?id=' + change_gardenSpace_option + '';
        baseSubType_dataTable.ajax.url(url).load();
    }

    //정원 업무삭제하기
    function removeGardenTask(gardenTaskId) {
        Swal.fire({
            title: '해당 정원 업무를 삭제 하시겠어요?',
            text: '관련된 모든 정보가 삭제 됩니다.',
            icon: 'warning',
            confirmButtonText: '삭제',
            showCancelButton: true,
            cancelButtonText: '취소',
        }).then(function (result) {
            if (result.value) {
                let httpRequest = new XMLHttpRequest();
                if (!httpRequest) {
                    errorMessage();
                    return false;
                }

                httpRequest.open('POST', '/GardenTasks/DeleteGardenTask', true);
                httpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                httpRequest.onload = function () {
                    if (this.status === 200 || this.response == "true") {
                        location.href = "/GardenTasks/Index";
                    } else {
                        errorMessage();
                    }
                };
                httpRequest.send('gardenTaskId=' + gardenTaskId);
            }
        });
    }
</script>
