
<div class="col-xl-12">
    <div class="card">
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">
                <i class="fas fa-coins fa-fw"></i>
                @Html.Raw("정원 회비 관리")
            </h6>
            <div class="dropdown no-arrow">
                <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                </a>
                <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in" aria-labelledby="dropdownMenuLink">
                    <div class="dropdown-header">@Html.Raw("그외 작업"):</div>
                    <a class="dropdown-item font-weight-bold" asp-controller="GardenFees" asp-action="IndexForFeeType">
                        <i class="fas fa-cogs text-primary mr-3"></i>
                        @Html.Raw("회비 타입 관리")
                    </a>
                    <button type="button" class="dropdown-item font-weight-bold" id="baseSubType_create_btn" onclick="openModal('GardenSpaces', 'Edit')" value="">
                        <i class="fas fa-brush text-success mr-3"></i>
                        @Html.Raw("수정")
                    </button>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-xl-12">
                    <h3 class="text-info font-weight-bold">@DateTime.Now.Month 월</h3>
                </div>
            </div>
            <div class="row mt-2">
                <div class="col-xl-12">
                    <table class="table table-hover" id="gardenFee_dt">
                        <thead>
                            <tr class="text-center">
                                <th>@Html.Raw("이름")</th>
                                <th>@Html.Raw("타입")</th>
                                <th>@Html.Raw("할인타입")</th>
                                <th>@Html.Raw("납부날짜")</th>
                                <th>@Html.Raw("만료날짜")</th>
                                <th>@Html.Raw("납부체크")</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var gardenUser_dataTable = $('#gardenFee_dt').DataTable({
        'ajax': {
            'url': "/GardenFees/GetGardenFeeJsonList?id=1",
            'type': 'GET',
            'datatype': 'json'
        },
        'columns': [
            {
                'data': 'userName', 'className': 'text-center m-2',
                'render': function (data, type, row, meta) {
                    return '<button type="button" class="btn btn-link text-info font-weight-bold">' + data + '</button>';
                },
            },
            {
                'data': 'feeType', 'className': 'text-center m-2',
                'render': function (data, type, row, meta) {
                    if (data != "-") {
                        return data + '<button type="button" class="btn btn-link text-success ml-2" onclick="EditFeeTypeOpen(\'' + row.feeId+'\', this)"><i class="fas fa-brush"></i></button>';
                    } else {
                        return data;
                    }
                },
            },
            {
                'data': 'discountType', 'className': 'text-center m-2',
                'render': function (data, type, row, meta) {
                    if (data != "-") {
                        return data + '<button type="button" class="btn btn-link text-success ml-2" onclick="EditDiscountType()"><i class="fas fa-brush"></i></button>';
                    } else {
                        return data;
                    }
                }
            },
            {
                'data': 'createDate', 'className': 'text-center m-2',
                'render': function (data, type, row, meta) {
                    if (data != "-") {
                        return data + '<button type="button" class="btn btn-link text-success ml-2" onclick="EditCreateDate()"><i class="fas fa-calendar"></i></button>';
                    } else {
                        return data;
                    }
                }
            },
            {
                'data': 'expireDate', 'className': 'text-center m-2',
                'render': function (data, type, row, meta) {
                    if (data != "-") {
                        return data + '<button type="button" class="btn btn-link text-success ml-2" onclick="EditExpireDate()"><i class="fas fa-calendar"></i></button>';
                    } else {
                        return data;
                    }

                }
            },
            {
                'data': 'userId', 'className': 'text-center m-2', 'orderable': false,
                'render': function (data, type, row, meta) {
                    if (row.feeId == '0') {
                        return '<button type="button" class="btn btn-md btn-primary" onClick="customOpenModal(' + row.gardenId + ',' + data + ')" >납부하기</button>';
                    } else {
                        return '<button type="button" class="btn btn-md btn-info" disabled>납부됨</button>';
                    }
                }
            }

        ],
        'retrieve': true,
        'responsive': true,
        'deferRender': true,
        'ordering': true,
        'info': true,
        'paging': true,
        'pageLength': 10,
        'searching': true,
        'processing': true,
    });

    //회비 납부 여부
    function CheckPayment(gardenId, userId, obj) {
        console.log(obj.checked);
    }

    function customOpenModal(gardenId, gardenUserId) {
        let url = '/GardenFees/Create?gardenId=' + gardenId + '&gardenUserId=' + gardenUserId + '';
        click_common_btn(url);
    }

    //회비타입 수정창 열기
    function EditFeeTypeOpen(feeId, obj) {
        let httpRequest = new XMLHttpRequest();
        if (!httpRequest) {
            errorMessage();
            return false;
        }

        httpRequest.open('POST', '/GardenFees/GetFeeTypeList', true);
        httpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        httpRequest.onload = function () {
            if (this.status === 200 && this.response == "false") {
                errorMessage();
            }
            else if (this.status === 200) {

                
                let values = JSON.parse(this.response);
                let optionBox = '';
                values.forEach(function (value, index) {
                    console.log(value);
                    optionBox += '<option value=' + value.id + '>' + value.name + '</option>';
                });               
                let editBox = '<div class="row">'+
                              '<div class="col-xl-6">' +
                              '<select class="form-control" id="SubTypeId_'+feeId+'">' + optionBox + '</select>' +
                              '</div>' +
                              '<div class="col-xl-6">' +
                              '<button type="button" class="btn btn-link text-primary" title="저장" onclick="EditFeeTypeValue(\''+feeId+'\')"><i class="fas fa-check-circle"></i></button>' +
                              '<button type="button" class="btn btn-link text-danger ml-1" title="취소" onclick="CancleEdit()"><i class="fas fa-pause-circle"></i></button>' +
                              '</div>'+
                              '</div>';
                              
                              

                //기존 항목 지우기
                let parentElement = obj.parentElement;
                while (parentElement.firstChild) {
                    parentElement.removeChild(parentElement.firstChild);
                }

                //수정창 추가
                parentElement.innerHTML = editBox;
            }
            else {
                console.log("회비 타입 수정 문제 발생");
            }
        }
        httpRequest.send('feeId=' + feeId);
    }
    //회비타입 수정
    function EditFeeTypeValue(feeId) {
        let selectBox = document.getElementById('SubTypeId_' + feeId);

        let selectValue = selectBox.options[selectBox.selectedIndex].value;

        let httpRequest = new XMLHttpRequest();
        if (!httpRequest) {
            errorMessage();
            return false;
        }

        httpRequest.open('POST', '/GardenFees/EditFeeTypeValue', true);
        httpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        httpRequest.onload = function () {
            if (this.status === 200 && this.response == "false") {
                errorMessage();
            }
            else if (this.status === 200) {
                location.reload();
            }
            else {
                console.log("회비 타입 수정 문제 발생");
            }
        }
        httpRequest.send('feeId=' + feeId + '&subTypeId=' + selectValue);

    }


    //할인타입 수정
    function EditDiscountType(feeId, obj) {

    }

    //납부날짜 수정
    function EditCreateDate(feeId, obj) {

    }

    //만료날짜 수정
    function EditExpireDate(feeId, obj) {

    }

    //상세조회 - 모달창
    function DetailGardenFee(feeId, obj) {

    }

    //수정 취소
    function CancleEdit() {
        location.reload();
    }
</script>
